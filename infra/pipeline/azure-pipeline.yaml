trigger:
- master
pr:
- master
stages:
- stage: build_and_test
  displayName: Build And Test
  jobs:
  - job: application
    displayName: Application
    pool:
      vmImage: ubuntu-16.04
    steps:
    - task: UsePythonVersion@0
      displayName: Use Python 3.7.x
      inputs:
        versionSpec: 3.7.x
    - task: ShellScript@2
      displayName: Install Infrastructure Dependencies
      inputs:
        scriptPath: infra/pipeline/scripts/install-infrastructure-dependencies.sh
        cwd: $(System.DefaultWorkingDirectory)
        args: "$(ghtoken)"
        disableAutoCwd: true
    - task: ShellScript@2
      displayName: Run Infrastructure Tests
      inputs:
        scriptPath: infra/pipeline/scripts/run-infrastructure-tests.sh
        cwd: $(System.DefaultWorkingDirectory)
        disableAutoCwd: true
    - task: PublishTestResults@2
      displayName: Publish Unit Test Results
      inputs:
        testResultsFiles: |
          **/test-*.xml
          **/junit.xml
        failTaskOnFailedTests: 'true'
    - task: ShellScript@2
      displayName: Synthesize cloudformation
      inputs:
        scriptPath: infra/pipeline/scripts/synthesize-cloudformation.sh
        cwd: $(System.DefaultWorkingDirectory)
        disableAutoCwd: true
    - task: whitesource.ws-bolt.bolt.wss.WhiteSource Bolt@19
      displayName: "WhiteSource Bolt"
      condition: "eq(variables['build.sourceBranch'], 'refs/heads/master')"
    - task: ShellScript@2
      displayName: run cfn_lint scans
      inputs:
        scriptPath: infra/pipeline/scripts/run-cfn_lint-scans.sh
        cwd: $(System.DefaultWorkingDirectory)
        disableAutoCwd: true
    - task: UseRubyVersion@0
      displayName: Use Ruby 2.4 for cfn_nag
      inputs:
        versionSpec: ==2.4
    - task: ShellScript@2
      displayName: run cfn_nag scans
      inputs:
        scriptPath: infra/pipeline/scripts/run-cfn_nag-scans.sh
        cwd: $(System.DefaultWorkingDirectory)
        disableAutoCwd: true
    - task: ShellScript@2
      displayName: run bandit scans
      inputs:
        scriptPath: infra/pipeline/scripts/run-bandit-scans.sh
        cwd: $(System.DefaultWorkingDirectory)
        disableAutoCwd: true
    - task: ShellScript@2
      displayName: Capture Python Scripts
      inputs:
        scriptPath: infra/pipeline/scripts/capture-python-scripts.sh
        cwd: $(System.DefaultWorkingDirectory)
        disableAutoCwd: true
    - task: CopyFiles@2
      displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
      inputs:
        Contents: |-
          infra/pipeline/scripts/**
          infra/cdk/**
        TargetFolder: $(Build.ArtifactStagingDirectory)
    - task: PublishPipelineArtifacts@1
      displayName: 'Publish Artifact: AWS-Scrapple'
      inputs:
        artifactName: 'AWS-Scrapple'

- stage: deploy_application
  displayName: Deploy Application
  dependsOn: build_and_test
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: deploy_sbx
    displayName: Deploy Application to Sandbox
    pool:
      vmImage: ubuntu-16.04
    environment: sbx
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            displayName: Download Artifacts
            inputs:
              artifactName: 'AWS-Scrapple'
          - task: UsePythonVersion@0
            displayName: Use Python 3.7.x
            inputs:
              versionSpec: 3.7.x
          - task: ShellScript@2
            displayName: Install Release Dependencies
            inputs:
              scriptPath: $(System.ArtifactsDirectory)/infra/pipeline/scripts/install-release-dependencies.sh
              args: "$(ghtoken)"
              cwd: $(System.ArtifactsDirectory)
              disableAutoCwd: true
          - task: AWSShellScript@1
            displayName: Create Or Update Stack
            inputs:
              awsCredentials: AWS-techintheburbs
              regionName: us-east-1
              arguments: $(System.ArtifactsDirectory)
              filePath: $(System.ArtifactsDirectory)/infra/pipeline/scripts/create-or-update-stack.sh
              cwd: $(System.ArtifactsDirectory)
              disableAutoCwd: true
